{"instance_id": "DataDog__integrations-core-10093", "model_patch": "\ndiff --git a/elastic/datadog_checks/elastic/elastic.py b/elastic/datadog_checks/elastic/elastic.py\nindex 4f551468c2..a7ea31dac4 100644\n--- a/elastic/datadog_checks/elastic/elastic.py\n+++ b/elastic/datadog_checks/elastic/elastic.py\n@@ -197,10 +197,11 @@ class ESCheck(AgentCheck):\n                     del index_data[key]\n                     self.log.warning(\"The index %s has no metric data for %s\", idx['index'], key)\n \n-            for metric in index_stats_metrics:\n-                # metric description\n-                desc = index_stats_metrics[metric]\n-                self._process_metric(index_data, metric, *desc, tags=tags)\n+    def _is_opensearch(self, version):\n+        \"\"\"\n+        Check if the version information indicates that we're running against an Opensearch instance\n+        \"\"\"\n+        return version.get('distribution', '').lower() == 'opensearch'\n \n     def _get_urls(self, version):\n         \"\"\"\n@@ -213,8 +214,9 @@ class ESCheck(AgentCheck):\n         if version >= [0, 90, 10]:\n             pending_tasks_url = \"/_cluster/pending_tasks\"\n             stats_url = \"/_nodes/stats\" if self._config.cluster_stats else \"/_nodes/_local/stats\"\n-            if version < [5, 0, 0]:\n+            if version < [5, 0, 0] and not self._is_opensearch(version):\n                 # version 5 errors out if the `all` parameter is set\n+                # Do not add `?all=true` if the distribution is 'opensearch'\n                 stats_url += \"?all=true\"\n             if version >= [7, 4, 0] and self._config.slm_stats:\n                 slm_url = \"/_slm/policy\"\n@@ -223,12 +225,16 @@ class ESCheck(AgentCheck):\n             pending_tasks_url = None\n             stats_url = (\n                 \"/_cluster/nodes/stats?all=true\"\n-                if self._config.cluster_stats\n-                else \"/_cluster/nodes/_local/stats?all=true\"\n+                if self._config.cluster_stats and not self._is_opensearch(version)\n+                else \"/_cluster/nodes/_local/stats\"\n             )\n \n         return health_url, stats_url, pshard_stats_url, pending_tasks_url, slm_url\n \n+        return health_url, stats_url, pshard_stats_url, pending_tasks_url, slm_url\n+\n+        return health_url, stats_url, pshard_stats_url, pending_tasks_url, slm_url\n+\n     def _get_data(self, url, send_sc=True):\n         \"\"\"\n         Hit a given URL and return the parsed json\ndiff --git a/test_elastic.py b/test_elastic.py\nnew file mode 100644\nindex 0000000000..bbc22e5574\n--- /dev/null\n+++ b/test_elastic.py\n@@ -0,0 +1,25 @@\n+def is_opensearch(version):\n+    return version.get('distribution', '').lower() == 'opensearch'\n+\n+def get_urls(version, cluster_stats=False):\n+    pshard_stats_url = \"/_stats\"\n+    health_url = \"/_cluster/health\"\n+    slm_url = None\n+    pending_tasks_url = \"/_cluster/pending_tasks\"\n+    stats_url = \"/_nodes/stats\" if cluster_stats else \"/_nodes/_local/stats\"\n+    if version < [5, 0, 0] and not is_opensearch(version):\n+        stats_url += \"?all=true\"\n+    if version >= [7, 4, 0]:\n+        slm_url = \"/_slm/policy\"\n+\n+    return health_url, stats_url, pshard_stats_url, pending_tasks_url, slm_url\n+\n+# Simulate Elasticsearch version\n+es_version = {'number': [7, 10, 2]}\n+print(\"Elasticsearch URLs:\", get_urls(es_version, cluster_stats=True))\n+\n+# Simulate Opensearch version\n+opensearch_version = {'number': [1, 0, 0], 'distribution': 'opensearch'}\n+print(\"Opensearch URLs:\", get_urls(opensearch_version, cluster_stats=True))\n+\n+print(\"Script completed successfully, no errors.\")\n", "model_name_or_path": "SWE-Agent"}