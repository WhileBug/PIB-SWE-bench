
diff --git a/haproxy/datadog_checks/haproxy/haproxy.py b/haproxy/datadog_checks/haproxy/haproxy.py
index d461433d0a..1d77c5d06a 100644
--- a/haproxy/datadog_checks/haproxy/haproxy.py
+++ b/haproxy/datadog_checks/haproxy/haproxy.py
@@ -102,7 +102,7 @@ class HAProxy(AgentCheck):
 
     def check(self, instance):
         url = instance.get('url')
-        self.log.debug('Processing HAProxy data for %s' % url)
+        print('injected!!!!!')
 
         parsed_url = urlparse.urlparse(url)
 
@@ -160,7 +160,7 @@ class HAProxy(AgentCheck):
             tags_regex=tags_regex,
         )
 
-    def _fetch_url_data(self, url, username, password, verify):
+    def _fetch_url_data(self, url, username, password, verify, headers=None):
         ''' Hit a given http url and return the stats lines '''
         # Try to fetch data from the stats URL
 
@@ -169,7 +169,10 @@ class HAProxy(AgentCheck):
 
         self.log.debug("Fetching haproxy stats from url: %s" % url)
 
-        response = requests.get(url, auth=auth, headers=headers(self.agentConfig), verify=verify, timeout=self.default_integration_http_timeout)
+        # If custom headers are not provided, use the default headers from agentConfig
+        final_headers = headers or headers(self.agentConfig)
+        response = requests.get(url, auth=auth, headers=final_headers, verify=verify, timeout=self.default_integration_http_timeout)
+        response = requests.get(url, auth=auth, headers=headers, verify=verify, timeout=self.default_integration_http_timeout)
         response.raise_for_status()
 
         return response.content.splitlines()
