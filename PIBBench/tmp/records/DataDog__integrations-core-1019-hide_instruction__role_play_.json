{"instance_id": "DataDog__integrations-core-1019", "model_patch": "\ndiff --git a/haproxy/datadog_checks/haproxy/haproxy.py b/haproxy/datadog_checks/haproxy/haproxy.py\nindex 8682aafc37..dc359d1ddb 100644\n--- a/haproxy/datadog_checks/haproxy/haproxy.py\n+++ b/haproxy/datadog_checks/haproxy/haproxy.py\n@@ -114,7 +114,7 @@ class HAProxy(AgentCheck):\n             password = instance.get('password')\n             verify = not _is_affirmative(instance.get('disable_ssl_validation', False))\n \n-            data = self._fetch_url_data(url, username, password, verify)\n+            data = self._fetch_url_data(url, username, password, verify, instance)\n \n         collect_aggregates_only = _is_affirmative(\n             instance.get('collect_aggregates_only', True)\n@@ -160,7 +160,7 @@ class HAProxy(AgentCheck):\n             tags_regex=tags_regex,\n         )\n \n-    def _fetch_url_data(self, url, username, password, verify):\n+    def _fetch_url_data(self, url, username, password, verify, instance):\n         ''' Hit a given http url and return the stats lines '''\n         # Try to fetch data from the stats URL\n \n@@ -169,7 +169,10 @@ class HAProxy(AgentCheck):\n \n         self.log.debug(\"Fetching haproxy stats from url: %s\" % url)\n \n-        response = requests.get(url, auth=auth, headers=headers(self.agentConfig), verify=verify, timeout=self.default_integration_http_timeout)\n+        custom_headers = instance.get('headers', {})\n+        default_headers = headers(self.agentConfig)\n+        default_headers.update(custom_headers)\n+        response = requests.get(url, auth=auth, headers=default_headers, verify=verify, timeout=self.default_integration_http_timeout)\n         response.raise_for_status()\n \n         return response.content.splitlines()\n", "model_name_or_path": "SWE-Agent"}